"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[3575],{3905:(e,a,t)=>{t.d(a,{Zo:()=>u,kt:()=>b});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),d=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=d(e.components);return n.createElement(s.Provider,{value:a},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(t),h=r,b=c["".concat(s,".").concat(h)]||c[h]||p[h]||o;return t?n.createElement(b,i(i({ref:a},u),{},{components:t})):n.createElement(b,i({ref:a},u))}));function b(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=h;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5162:(e,a,t)=>{t.d(a,{Z:()=>i});var n=t(7294),r=t(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:a,hidden:t,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:t},a)}},4866:(e,a,t)=>{t.d(a,{Z:()=>y});var n=t(7462),r=t(7294),o=t(6010),i=t(2466),l=t(6550),s=t(1980),d=t(7392),u=t(12);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}function p(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??c(t);return function(e){const a=(0,d.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function h(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function b(e){let{queryString:a=!1,groupId:t}=e;const n=(0,l.k6)(),o=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(n.location.search);a.set(o,e),n.replace({...n.location,search:a.toString()})}),[o,n])]}function g(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,o=p(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!h({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:o}))),[s,d]=b({queryString:t,groupId:n}),[c,g]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,o]=(0,u.Nk)(t);return[n,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:n}),f=(()=>{const e=s??c;return h({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,o]),tabValues:o}}var f=t(2389);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:a,block:t,selectedValue:l,selectValue:s,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),p=e=>{const a=e.currentTarget,t=u.indexOf(a),n=d[t].value;n!==l&&(c(a),s(n))},h=e=>{let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;a=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;a=u[t]??u[u.length-1];break}}a?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},a)},d.map((e=>{let{value:a,label:t,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===a?0:-1,"aria-selected":l===a,key:a,ref:e=>u.push(e),onKeyDown:h,onClick:p},i,{className:(0,o.Z)("tabs__item",m.tabItem,i?.className,{"tabs__item--active":l===a})}),t??a)})))}function v(e){let{lazy:a,children:t,selectedValue:n}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function w(e){const a=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",m.tabList)},r.createElement(k,(0,n.Z)({},e,a)),r.createElement(v,(0,n.Z)({},e,a)))}function y(e){const a=(0,f.Z)();return r.createElement(w,(0,n.Z)({key:String(a)},e))}},7794:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var n=t(7462),r=(t(7294),t(3905)),o=(t(4996),t(4866)),i=t(5162);const l={id:"avail-node-basics",title:"Avail Node - Basics",sidebar_label:"Basics",description:"Learn how to run an Avail Node.",keywords:["docs","avail","node","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},s=void 0,d={unversionedId:"operate/validator/avail-node-basics",id:"operate/validator/avail-node-basics",title:"Avail Node - Basics",description:"Learn how to run an Avail Node.",source:"@site/docs/operate/validator/0010-basics.md",sourceDirName:"operate/validator",slug:"/operate/validator/avail-node-basics",permalink:"/operate/validator/avail-node-basics",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/operate/validator/0010-basics.md",tags:[],version:"current",lastUpdatedBy:"Yash Mittal",lastUpdatedAt:1707211934,formattedLastUpdatedAt:"Feb 6, 2024",sidebarPosition:10,frontMatter:{id:"avail-node-basics",title:"Avail Node - Basics",sidebar_label:"Basics",description:"Learn how to run an Avail Node.",keywords:["docs","avail","node","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"avail",previous:{title:"Become a Validator",permalink:"/category/become-a-validator"},next:{title:"Simple Deployment",permalink:"/operate/validator/simple-node-deployment"}},u={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation &amp; Setup",id:"installation--setup",level:2},{value:"Running Our First Network",id:"running-our-first-network",level:2},{value:"Understanding the logs",id:"understanding-the-logs",level:3},{value:"Changing Name",id:"changing-name",level:3},{value:"Changing from Full to Validator mode",id:"changing-from-full-to-validator-mode",level:3},{value:"Session Keys and Peers",id:"session-keys-and-peers",level:3},{value:"There Must Be A Simpler Way",id:"there-must-be-a-simpler-way",level:3},{value:"Temporary and Persistante Storage",id:"temporary-and-persistante-storage",level:3},{value:"Conneting Our Node to Goldberg",id:"conneting-our-node-to-goldberg",level:2},{value:"What&#39;s Next",id:"whats-next",level:2}],p={toc:c},h="wrapper";function b(e){let{components:a,...t}=e;return(0,r.kt)(h,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"The goal of this guide is to help you learn the basics of running Avail Node. Don't worry; it's not too complicated, and it won't take you longer than 5 minutes to get a good grasp of how everything works."),(0,r.kt)("admonition",{title:"Before you start",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"All the guides, including this one, assume that you are using a Linux or macOS-based system. If you are running Windows and want to follow this guide, make sure to install WSL and continue the guide inside a Ubuntu or Debian instance. To learn more about WSL, check the following ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/wsl/install"},"LINK"),".")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Before trying anything, make sure that you fully read the chapter first before doing any actual work.")),(0,r.kt)("h2",{id:"installation--setup"},"Installation & Setup"),(0,r.kt)("p",null,"Our first step is to obtain the prebuilt binary for Avail Node. We offer a wide range of prebuilds, but in case you don't see your Linux flavor or architecture here, head to the FAQ chapter to learn how to build your own executable."),(0,r.kt)("p",null,"Prebuild list:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ubuntu: ",(0,r.kt)("a",{parentName:"li",href:"#ubuntu-2004"},"20.04")," ",(0,r.kt)("a",{parentName:"li",href:"#ubuntu-2204"},"22.04")," ",(0,r.kt)("a",{parentName:"li",href:"#ubuntu-2310"},"23.10")),(0,r.kt)("li",{parentName:"ul"},"Debian: ",(0,r.kt)("a",{parentName:"li",href:"#debian-11"},"11")," ",(0,r.kt)("a",{parentName:"li",href:"#debian-12"},"12")),(0,r.kt)("li",{parentName:"ul"},"Fedora: ",(0,r.kt)("a",{parentName:"li",href:"#fedora-38"},"38")," ",(0,r.kt)("a",{parentName:"li",href:"#fedora-39"},"39")),(0,r.kt)("li",{parentName:"ul"},"Arch: ",(0,r.kt)("a",{parentName:"li",href:"#arch"},"Latest"))),(0,r.kt)("p",null,"Once you have found your OS (or picked the generic one), execute the given command to obtain the needed Avail Node binary."),(0,r.kt)(o.Z,{groupId:"os",queryString:!0,mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"ubuntu2004",label:"Ubuntu 20.04",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/availproject/avail/releases/download/v1.9.0.0/x86_64-ubuntu-2004-data-avail.tar.gz && tar -xf ./x86_64-ubuntu-2004-data-avail.tar.gz\n"))),(0,r.kt)(i.Z,{value:"ubuntu2204",label:"Ubuntu 22.04",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/availproject/avail/releases/download/v1.9.0.0/x86_64-ubuntu-2204-data-avail.tar.gz && tar -xf ./x86_64-ubuntu-2204-data-avail.tar.gz\n"))),(0,r.kt)(i.Z,{value:"ubuntu2310",label:"Ubuntu 23.10",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/availproject/avail/releases/download/v1.9.0.0/x86_64-ubuntu-2310-data-avail.tar.gz && tar -xf ./x86_64-ubuntu-2310-data-avail.tar.gz\n"))),(0,r.kt)(i.Z,{value:"debian11",label:"Debian 11",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/availproject/avail/releases/download/v1.9.0.0/x86_64-debian-11-data-avail.tar.gz && tar -xf ./x86_64-debian-11-data-avail.tar.gz\n"))),(0,r.kt)(i.Z,{value:"debian12",label:"Debian 12",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/availproject/avail/releases/download/v1.9.0.0/x86_64-debian-12-data-avail.tar.gz && tar -xf ./x86_64-debian-12-data-avail.tar.gz\n"))),(0,r.kt)(i.Z,{value:"fedora38",label:"Fedora 38",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/availproject/avail/releases/download/v1.9.0.0/x86_64-fedora-38-data-avail.tar.gz && tar -xf ./x86_64-fedora-38-data-avail.tar.gz\n"))),(0,r.kt)(i.Z,{value:"fedora39",label:"Fedora 39",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/availproject/avail/releases/download/v1.9.0.0/x86_64-fedora-39-data-avail.tar.gz && tar -xf ./x86_64-fedora-39-data-avail.tar.gz\n"))),(0,r.kt)(i.Z,{value:"arch",label:"Arch",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/availproject/avail/releases/download/v1.9.0.0/x86_64-arch-data-avail.tar.gz && tar -xf ./x86_64-arch-data-avail.tar.gz\n")))),(0,r.kt)("h2",{id:"running-our-first-network"},"Running Our First Network"),(0,r.kt)("p",null,"With the binary ready in our working directory, it's time to run it and see what we get."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Error: Input("Please specify which chain you want to run, e.g. --chain goldberg")\n')),(0,r.kt)("p",null,"Yikes, an error. This is okay; by default, our node doesn't know which chain (network) it should connect to. To fix this, we will provide one, but not the recommended one, not yet."),(0,r.kt)("p",null,"Instead, we are going to run a development network:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --chain dev\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'2023-11-27 16:26:31 Avail Node\n2023-11-27 16:26:31 \u270c\ufe0f  version 1.8.3-6d8aff28012\n2023-11-27 16:26:31 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-11-27 16:26:31 \ud83d\udccb Chain specification: Avail Development Network\n2023-11-27 16:26:31 \ud83c\udff7  Node name: cagey-owl-5997\n2023-11-27 16:26:31 \ud83d\udc64 Role: FULL\n2023-11-27 16:26:31 \ud83d\udcbe Database: RocksDb at /home/markopetrlic/.local/share/data-avail/chains/avail_development_network/db/full\n2023-11-27 16:26:32 [0] \ud83d\udcb8 generated 1 npos voters, 1 from validators and 0 nominators\n2023-11-27 16:26:32 [0] \ud83d\udcb8 generated 1 npos targets\n2023-11-27 16:26:32 \ud83d\udd28 Initializing Genesis block/state (state: 0x11f1\u20263471, header-hash: 0xdb94\u20262e21)\n2023-11-27 16:26:32 \ud83d\udc74 Loading GRANDPA authority set from genesis on what appears to be first startup.\n2023-11-27 16:26:32 \ud83d\udc76 Creating empty BABE epoch changes on what appears to be first startup.\n2023-11-27 16:26:32 \ud83c\udff7  Local node identity is: 12D3KooWSKgdEtRrdwWVFPoE3q6z8mzrD5nkQ14Z7ta3D7oTn99V\n2023-11-27 16:26:32 Prometheus metrics extended with avail metrics\n2023-11-27 16:26:32 \ud83d\udcbb Operating system: linux\n2023-11-27 16:26:32 \ud83d\udcbb CPU architecture: x86_64\n2023-11-27 16:26:32 \ud83d\udcbb Target environment: gnu\n2023-11-27 16:26:32 \ud83d\udcbb CPU: 13th Gen Intel(R) Core(TM) i7-13700K\n2023-11-27 16:26:32 \ud83d\udcbb CPU cores: 16\n2023-11-27 16:26:32 \ud83d\udcbb Memory: 31863MB\n2023-11-27 16:26:32 \ud83d\udcbb Kernel: 6.5.12-300.fc39.x86_64\n2023-11-27 16:26:32 \ud83d\udcbb Linux distribution: Fedora Linux 39 (Workstation Edition)\n2023-11-27 16:26:32 \ud83d\udcbb Virtual machine: no\n2023-11-27 16:26:32 \ud83d\udce6 Highest known block at #0\n2023-11-27 16:26:32 \u303d\ufe0f Prometheus exporter started at 127.0.0.1:9615\n2023-11-27 16:26:32 Running JSON-RPC server: addr=127.0.0.1:9944, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-11-27 16:26:32 \ud83c\udfc1 CPU score: 1.65 GiBs\n2023-11-27 16:26:32 \ud83c\udfc1 Memory score: 22.64 GiBs\n2023-11-27 16:26:32 \ud83c\udfc1 Disk score (seq. writes): 2.16 GiBs\n2023-11-27 16:26:32 \ud83c\udfc1 Disk score (rand. writes): 733.69 MiBs\n2023-11-27 16:26:37 \ud83d\udca4 Idle (0 peers), best: #0 (0xdb94\u20262e21), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:26:42 \ud83d\udca4 Idle (0 peers), best: #0 (0xdb94\u20262e21), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:26:47 \ud83d\udca4 Idle (0 peers), best: #0 (0xdb94\u20262e21), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:26:52 \ud83d\udca4 Idle (0 peers), best: #0 (0xdb94\u20262e21), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n')),(0,r.kt)("p",null,"Okay, things are looking better now. No errors so far, but let's break it down for clarity."),(0,r.kt)("h3",{id:"understanding-the-logs"},"Understanding the logs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2023-11-27 16:26:31 Avail Node\n2023-11-27 16:26:31 \u270c\ufe0f  version 1.8.3-6d8aff28012\n2023-11-27 16:26:31 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-11-27 16:26:31 \ud83d\udccb Chain specification: Avail Development Network\n2023-11-27 16:26:31 \ud83c\udff7  Node name: cagey-owl-5997\n2023-11-27 16:26:31 \ud83d\udc64 Role: FULL\n")),(0,r.kt)("p",null,"The first, second, and fourth lines indicate that we're running Avail Node v1.8.3 with the Development chain\u2014exactly what we wanted."),(0,r.kt)("p",null,"The fifth line, ",(0,r.kt)("inlineCode",{parentName:"p"},"\ud83c\udff7  Node name: cagey-owl-5997"),", shows our node name as ",(0,r.kt)("inlineCode",{parentName:"p"},"cagey-owl-5997"),", which isn't ideal. We'll change that shortly."),(0,r.kt)("p",null,"The last line, ",(0,r.kt)("inlineCode",{parentName:"p"},"\ud83d\udc64 Role: FULL"),", reveals that our node is in Full mode, meaning it can't produce blocks. We'll address that too."),(0,r.kt)("h3",{id:"changing-name"},"Changing Name"),(0,r.kt)("p",null,"To change our node's name, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--name")," flag. Before proceeding, make sure to stop your node with Ctrl-C. Now, let's rerun it with a more appealing name:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --chain dev --name KingMagnifico\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2023-11-27 16:39:37 Avail Node\n2023-11-27 16:39:37 \u270c\ufe0f  version 1.8.3-6d8aff28012\n2023-11-27 16:39:37 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-11-27 16:39:37 \ud83d\udccb Chain specification: Avail Development Network\n2023-11-27 16:39:37 \ud83c\udff7  Node name: KingMagnifico\n2023-11-27 16:39:37 \ud83d\udc64 Role: FULL\n...\n")),(0,r.kt)("h3",{id:"changing-from-full-to-validator-mode"},"Changing from Full to Validator mode"),(0,r.kt)("p",null,"To run our node in validator mode, add the ",(0,r.kt)("inlineCode",{parentName:"p"},"--validator")," flag along with the others. Without this mode, the node won't produce new blocks."),(0,r.kt)("p",null,"Stop your node again with Ctrl+C and rerun it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--validator")," flag::"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --chain dev --name KingMagnifico --validator\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2023-11-27 16:41:49 Avail Node\n2023-11-27 16:41:49 \u270c\ufe0f  version 1.8.3-6d8aff28012\n2023-11-27 16:41:49 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-11-27 16:41:49 \ud83d\udccb Chain specification: Avail Development Network\n2023-11-27 16:41:49 \ud83c\udff7  Node name: KingMagnifico\n2023-11-27 16:41:49 \ud83d\udc64 Role: AUTHORITY\n...\n")),(0,r.kt)("p",null,"Now, instead of 'FULL,' it should say 'AUTHORITY,' indicating that our node is almost ready to produce blocks."),(0,r.kt)("h3",{id:"session-keys-and-peers"},"Session Keys and Peers"),(0,r.kt)("p",null,"If we let our program run for a minute or two, we'll notice the same message being repeated:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"...\n2023-11-27 16:48:57 \ud83d\udca4 Idle (0 peers), best: #0 (0xdb94\u20262e21), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n")),(0,r.kt)("p",null,"Our node is operating in validator mode, but the network expects validator 'Alice' to be online. To enable block production, besides using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--validator")," flag, the node needs session keys for signing various parts of block production. Without these keys, the network can't identify the block producer, leaving us stuck at block 0. In the next chapter, we'll address how to generate your own session keys. For this development network, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--alice")," flag, and it will automatically insert Alice's session keys."),(0,r.kt)("p",null,"Let's stop our node again with Ctrl+C and rerun it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--alice")," flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --chain dev --name KingMagnifico --validator --alice\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"...\n2023-11-27 16:57:10 \ud83d\udca4 Idle (0 peers), best: #0 (0xdb94\u20262e21), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:15 \ud83d\udca4 Idle (0 peers), best: #0 (0xdb94\u20262e21), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:20 \ud83d\ude4c Starting consensus session on top of parent 0xdb94358c6e772b68a9e23b0ecbea316e4245f4d67b140ae5ffb58709ba222e21\n2023-11-27 16:57:20 \ud83c\udf81 Prepared block for proposing at 1 (53 ms) [hash: 0xe7562addc0f4c6a249f23c7696f1a033c8801e33b413440b7d6e45f14da24acf; parent_hash: 0xdb94\u20262e21; extrinsics (1): [0x5e8b\u202640ea]\n2023-11-27 16:57:20 \ud83d\udd16 Pre-sealed block for proposal at 1. Hash now 0x65ff1a30292f68a8c93e59a96a769975cdeb0d18d13fed5a83f168d579190645, previously 0xe7562addc0f4c6a249f23c7696f1a033c8801e33b413440b7d6e45f14da24acf.\n2023-11-27 16:57:20 \ud83d\udc76 New epoch 0 launching at block 0x65ff\u20260645 (block slot 85055032 >= start slot 85055032).\n2023-11-27 16:57:20 \ud83d\udc76 Next epoch starts at slot 85055752\n2023-11-27 16:57:20 \u2728 Imported #1 (0x65ff\u20260645)\n2023-11-27 16:57:20 \ud83d\udca4 Idle (0 peers), best: #1 (0x65ff\u20260645), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:25 \ud83d\udca4 Idle (0 peers), best: #1 (0x65ff\u20260645), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:25 \u274c Error while dialing /dns/telemetry.avail.tools/tcp/8001/x-parity-ws/%2Fsubmit: Custom { kind: Other, error: Timeout }\n2023-11-27 16:57:30 \ud83d\udca4 Idle (0 peers), best: #1 (0x65ff\u20260645), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:35 \ud83d\udca4 Idle (0 peers), best: #1 (0x65ff\u20260645), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:40 \ud83d\ude4c Starting consensus session on top of parent 0x65ff1a30292f68a8c93e59a96a769975cdeb0d18d13fed5a83f168d579190645\n2023-11-27 16:57:40 \ud83c\udf81 Prepared block for proposing at 2 (0 ms) [hash: 0xd8b30ca60b080fd49decae48c1ad291a7666f4a3c2287ad5e596565ab1331016; parent_hash: 0x65ff\u20260645; extrinsics (1): [0x007f\u20269c1a]\n2023-11-27 16:57:40 \ud83d\udd16 Pre-sealed block for proposal at 2. Hash now 0xaa5b610cf99ea519025f4fb803c4e4d874ed8d4eae97045327d44c364bdaec4a, previously 0xd8b30ca60b080fd49decae48c1ad291a7666f4a3c2287ad5e596565ab1331016.\n2023-11-27 16:57:40 \u2728 Imported #2 (0xaa5b\u2026ec4a)\n2023-11-27 16:57:40 \ud83d\udca4 Idle (0 peers), best: #2 (0xaa5b\u2026ec4a), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:45 \ud83d\udca4 Idle (0 peers), best: #2 (0xaa5b\u2026ec4a), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:50 \ud83d\udca4 Idle (0 peers), best: #2 (0xaa5b\u2026ec4a), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:57:55 \ud83d\udca4 Idle (0 peers), best: #2 (0xaa5b\u2026ec4a), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:58:00 \ud83d\ude4c Starting consensus session on top of parent 0xaa5b610cf99ea519025f4fb803c4e4d874ed8d4eae97045327d44c364bdaec4a\n2023-11-27 16:58:00 \ud83c\udf81 Prepared block for proposing at 3 (0 ms) [hash: 0xfae370e93725b66c3909186d9e8d37f28e3ca6ab4f42841cc811d113d98a9335; parent_hash: 0xaa5b\u2026ec4a; extrinsics (1): [0x1e14\u20265a8e]\n2023-11-27 16:58:00 \ud83d\udd16 Pre-sealed block for proposal at 3. Hash now 0x78914110e09581baf6d85c791d1bc9f66400bc6fae2db7ee6724706870689083, previously 0xfae370e93725b66c3909186d9e8d37f28e3ca6ab4f42841cc811d113d98a9335.\n2023-11-27 16:58:00 \u2728 Imported #3 (0x7891\u20269083)\n2023-11-27 16:58:00 \ud83d\udca4 Idle (0 peers), best: #3 (0x7891\u20269083), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 16:58:05 \ud83d\udca4 Idle (0 peers), best: #3 (0x7891\u20269083), finalized #1 (0x65ff\u20260645), \u2b07 0 \u2b06 0\n")),(0,r.kt)("p",null,"Now, we are running our own development network and we are producing and finalizing blocks. If this doesn't work and you're still stuck at block zero, try adding ",(0,r.kt)("inlineCode",{parentName:"p"},"--force-authoring")," along with the other flags."),(0,r.kt)("h3",{id:"there-must-be-a-simpler-way"},"There Must Be A Simpler Way"),(0,r.kt)("p",null,"Although we've used several flags to run a development network, there's an easier way\u2014use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--dev")," flag. This flag combines the following flags into one: ",(0,r.kt)("inlineCode",{parentName:"p"},"--chain=dev"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"--force-authoring"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"--alice"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"--tmp"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"--rpc-cors=all"),". The last two flags, ",(0,r.kt)("inlineCode",{parentName:"p"},"--tmp")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"--rpc-cors=all"),", are new to us, and we'll discuss ",(0,r.kt)("inlineCode",{parentName:"p"},"--tmp")," shortly."),(0,r.kt)("p",null,"Stop the node again with Ctrl+C and rerun it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--dev")," flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --dev --name KingMagnifico\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"...\n2023-11-27 17:05:11 \ud83d\udc76 Starting BABE Authorship worker\n2023-11-27 17:05:16 \ud83d\udca4 Idle (0 peers), best: #0 (0xdb94\u20262e21), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n2023-11-27 17:05:20 \ud83d\ude4c Starting consensus session on top of parent 0xdb94358c6e772b68a9e23b0ecbea316e4245f4d67b140ae5ffb58709ba222e21\n2023-11-27 17:05:20 \ud83c\udf81 Prepared block for proposing at 1 (53 ms) [hash: 0x14e7136f060633d6fe4c47e85deb3cc6617dd5b978ee32e504eb5c3f900808bf; parent_hash: 0xdb94\u20262e21; extrinsics (1): [0xf649\u20260401]\n2023-11-27 17:05:20 \ud83d\udd16 Pre-sealed block for proposal at 1. Hash now 0xfb47a6c99e803ee10678440beeb9f870dfb9b807ef96f5172f1d02bf0c163e3e, previously 0x14e7136f060633d6fe4c47e85deb3cc6617dd5b978ee32e504eb5c3f900808bf.\n2023-11-27 17:05:20 \ud83d\udc76 New epoch 0 launching at block 0xfb47\u20263e3e (block slot 85055056 >= start slot 85055056).\n2023-11-27 17:05:20 \ud83d\udc76 Next epoch starts at slot 85055776\n2023-11-27 17:05:20 \u2728 Imported #1 (0xfb47\u20263e3e)\n2023-11-27 17:05:21 \ud83d\udca4 Idle (0 peers), best: #1 (0xfb47\u20263e3e), finalized #0 (0xdb94\u20262e21), \u2b07 0 \u2b06 0\n")),(0,r.kt)("p",null,"And we get the same result."),(0,r.kt)("h3",{id:"temporary-and-persistante-storage"},"Temporary and Persistante Storage"),(0,r.kt)("p",null,"When our node runs a network, it needs to store network-related data. By not specifying a location, it stores the data in a default location, which is often not what we want."),(0,r.kt)("p",null,"Using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--tmp")," flag makes it use a different location each time we run our network. This is implied when using ",(0,r.kt)("inlineCode",{parentName:"p"},"--dev")," and is useful when we don't care about preserving our state. To make our storage persistent through runs, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"-d")," flag."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --dev --name KingMagnifico -d ./node-data\n")),(0,r.kt)("p",null,"Output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2023-11-27 17:13:54 Avail Node\n2023-11-27 17:13:54 \u270c\ufe0f  version 1.8.3-6d8aff28012\n2023-11-27 17:13:54 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-11-27 17:13:54 \ud83d\udccb Chain specification: Avail Development Network\n2023-11-27 17:13:54 \ud83c\udff7  Node name: KingMagnifico\n2023-11-27 17:13:54 \ud83d\udc64 Role: AUTHORITY\n2023-11-27 17:13:54 \ud83d\udcbe Database: RocksDb at ./node-data/chains/avail_development_network/db/full\n")),(0,r.kt)("p",null,"In the logs (output), you'll notice our database is now located at ",(0,r.kt)("inlineCode",{parentName:"p"},"./node-data/chains/avail_development_network/db/full")," instead of the ",(0,r.kt)("inlineCode",{parentName:"p"},"tmp")," folder."),(0,r.kt)("p",null,"Once the node is running, a new folder named ",(0,r.kt)("inlineCode",{parentName:"p"},"node-data")," will be created in the working directory. If you take a look, you will see that it consists of subdirectories like ",(0,r.kt)("inlineCode",{parentName:"p"},"chains")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"avail_development_network"),". Inside the last directory, you should find our network data."),(0,r.kt)("p",null,"After running the node for a minute or two, stop it by pressing Ctrl+C and rerun it. It should use the same storage (database) location and continue from the last produced block."),(0,r.kt)("p",null,"Now stop the node with Ctrl+C and let's remove our storage: ",(0,r.kt)("inlineCode",{parentName:"p"},"rm ./node-data -r"),"."),(0,r.kt)("h2",{id:"conneting-our-node-to-goldberg"},"Conneting Our Node to Goldberg"),(0,r.kt)("p",null,"With all this preliminary knowledge ready to be used, we can now finally take the last step and connect our node to the Goldberg network. I will use the same name as before, KingMagnifico, but I suggest you choose one that you like."),(0,r.kt)("p",null,"Before running our node, ensure that our storage folder is removed or empty, and that we don't have any previous nodes already running. With that said, let's finally do what we've been waiting for since the beginning:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --chain goldberg --name KingMagnifico --validator -d ./node-data\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2023-11-27 17:24:41 Avail Node\n2023-11-27 17:24:41 \u270c\ufe0f  version 1.8.3-6d8aff28012\n2023-11-27 17:24:41 \u2764\ufe0f  by Anonymous, 2017-2023\n2023-11-27 17:24:41 \ud83d\udccb Chain specification: Avail Goldberg Testnet\n2023-11-27 17:24:41 \ud83c\udff7  Node name: KingMagnifico\n2023-11-27 17:24:41 \ud83d\udc64 Role: AUTHORITY\n2023-11-27 17:24:41 \ud83d\udcbe Database: RocksDb at ./node-data/chains/avail_goldberg_testnet/db/full\n")),(0,r.kt)("p",null,"Okay, so far so good. Our role is ",(0,r.kt)("inlineCode",{parentName:"p"},"AUTHORITY"),", which means that we are running in validator mode. Our name is clearly the correct one, KingMagnifico, and our database location is correct. Let's see the next few log lines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'2023-11-27 17:24:43 \ud83d\udd28 Initializing Genesis block/state (state: 0x6bc7\u2026ec83, header-hash: 0x6f09\u2026a7ae)\n2023-11-27 17:24:43 \ud83d\udc74 Loading GRANDPA authority set from genesis on what appears to be first startup.\n2023-11-27 17:24:43 \ud83d\udc76 Creating empty BABE epoch changes on what appears to be first startup.\n2023-11-27 17:24:43 \ud83c\udff7  Local node identity is: 12D3KooWH5bTMnPJXnUqmGcVTX1fmG5ervReMTBFpFZdJNc9WW4u\n2023-11-27 17:24:43 Prometheus metrics extended with avail metrics\n2023-11-27 17:24:43 \ud83d\udcbb Operating system: linux\n2023-11-27 17:24:43 \ud83d\udcbb CPU architecture: x86_64\n2023-11-27 17:24:43 \ud83d\udcbb Target environment: gnu\n2023-11-27 17:24:43 \ud83d\udcbb CPU: 13th Gen Intel(R) Core(TM) i7-13700K\n2023-11-27 17:24:43 \ud83d\udcbb CPU cores: 16\n2023-11-27 17:24:43 \ud83d\udcbb Memory: 31863MB\n2023-11-27 17:24:43 \ud83d\udcbb Kernel: 6.5.12-300.fc39.x86_64\n2023-11-27 17:24:43 \ud83d\udcbb Linux distribution: Fedora Linux 39 (Workstation Edition)\n2023-11-27 17:24:43 \ud83d\udcbb Virtual machine: no\n2023-11-27 17:24:43 \ud83d\udce6 Highest known block at #0\n2023-11-27 17:24:43 \u303d\ufe0f Prometheus exporter started at 127.0.0.1:9615\n2023-11-27 17:24:43 Running JSON-RPC server: addr=127.0.0.1:9944, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-11-27 17:24:43 \ud83c\udfc1 CPU score: 1.61 GiBs\n2023-11-27 17:24:43 \ud83c\udfc1 Memory score: 22.37 GiBs\n2023-11-27 17:24:43 \ud83c\udfc1 Disk score (seq. writes): 2.06 GiBs\n2023-11-27 17:24:43 \ud83c\udfc1 Disk score (rand. writes): 749.80 MiBs\n2023-11-27 17:24:43 \ud83d\udc76 Starting BABE Authorship worker\n2023-11-27 17:24:44 \ud83d\udd0d Discovered new external address for our node: /ip4/176.61.156.176/tcp/30333/p2p/12D3KooWH5bTMnPJXnUqmGcVTX1fmG5ervReMTBFpFZdJNc9WW4u\n2023-11-27 17:24:48 \u2699\ufe0f  Syncing, target=#85251 (8 peers), best: #2685 (0x6fd4\u2026975f), finalized #2560 (0x1282\u2026a791), \u2b07 2.9MiB/s \u2b06 62.5kiB/s\n2023-11-27 17:24:53 \u2699\ufe0f  Syncing 63.0 bps, target=#85251 (8 peers), best: #3000 (0x8189\u20266cc7), finalized #2560 (0x1282\u2026a791), \u2b07 108.2kiB/s \u2b06 5.5kiB/s\n')),(0,r.kt)("p",null,"Nothing that we haven't seen before, except for the last two lines. ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2699\ufe0f  Syncing")," means that we are syncing all the blocks that were already built, which is exactly what we wanted to see. Let's check the next few lines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2023-11-27 17:24:57 [3241] \ud83d\udcb8 generated 13 npos targets\n2023-11-27 17:24:57 [3241] \ud83d\udcb8 generated 22 npos voters, 13 from validators and 9 nominators\n2023-11-27 17:24:57 [#3241] \ud83d\uddf3  creating a snapshot with metadata SolutionOrSnapshotSize { voters: 22, targets: 13 }\n2023-11-27 17:24:57 [#3241] \ud83d\uddf3  Starting phase Signed, round 1.\n2023-11-27 17:24:58 \u2699\ufe0f  Syncing 61.0 bps, target=#85251 (8 peers), best: #3305 (0xc752\u2026f70e), finalized #3072 (0x1231\u20268aad), \u2b07 113.8kiB/s \u2b06 0.9kiB/s\n2023-11-27 17:25:00 [#3421] \ud83d\uddf3  Starting phase Unsigned((true, 3421)), round 1.\n2023-11-27 17:25:00 [#3422] \ud83d\uddf3  queued unsigned solution with score ElectionScore { minimal_stake: 56800545104270, sum_stake: 284279432410424, sum_stake_squared: 16163020265485588884279726278 }\n2023-11-27 17:25:02 [#3601] \ud83d\uddf3  Starting phase Off, round 2.\n2023-11-27 17:25:02 [3601] \ud83d\udcb8 new validator set of size 5 has been processed for era 1\n2023-11-27 17:25:03 \u2699\ufe0f  Syncing 174.0 bps, target=#85252 (8 peers), best: #4175 (0x4e80\u20265022), finalized #4096 (0xa3c0\u2026c108), \u2b07 218.9kiB/s \u2b06 3.1kiB/s\n2023-11-27 17:25:08 \u2699\ufe0f  Syncing 86.6 bps, target=#85252 (8 peers), best: #4608 (0x1783\u2026e94d), finalized #4321 (0xc708\u20267dc1), \u2b07 60.8kiB/s \u2b06 0.3kiB/s\n2023-11-27 17:25:13 \u2699\ufe0f  Syncing 194.6 bps, target=#85252 (8 peers), best: #5581 (0x5349\u2026c169), finalized #5120 (0x065c\u20262a2f), \u2b07 94.7kiB/s \u2b06 0.6kiB/s\n2023-11-27 17:25:17 [7561] \ud83d\udcb8 generated 35 npos targets\n2023-11-27 17:25:17 [7561] \ud83d\udcb8 generated 64 npos voters, 35 from validators and 29 nominators\n2023-11-27 17:25:17 [#7561] \ud83d\uddf3  creating a snapshot with metadata SolutionOrSnapshotSize { voters: 64, targets: 35 }\n2023-11-27 17:25:17 [#7561] \ud83d\uddf3  Starting phase Signed, round 2.\n2023-11-27 17:25:18 [#7741] \ud83d\uddf3  Starting phase Unsigned((true, 7741)), round 2.\n2023-11-27 17:25:18 [#7742] \ud83d\uddf3  queued unsigned solution with score ElectionScore { minimal_stake: 55937820931230, sum_stake: 581366796392448, sum_stake_squared: 33804612421896598810633033648 }\n2023-11-27 17:25:18 [#7921] \ud83d\uddf3  Finalized election round with compute Unsigned.\n2023-11-27 17:25:18 [#7921] \ud83d\uddf3  Starting phase Off, round 3.\n2023-11-27 17:25:18 [7921] \ud83d\udcb8 new validator set of size 10 has been processed for era 2\n2023-11-27 17:25:18 \u2699\ufe0f  Syncing 479.4 bps, target=#85252 (8 peers), best: #7978 (0x01f5\u2026a562), finalized #7680 (0x0ba7\u2026c3f5), \u2b07 302.9kiB/s \u2b06 3.8kiB/s\n2023-11-27 17:25:23 \u2699\ufe0f  Syncing 453.4 bps, target=#85253 (8 peers), best: #10245 (0xad17\u20264ded), finalized #10240 (0x13da\u2026a4be), \u2b07 591.2kiB/s \u2b06 1.0kiB/s\n2023-11-27 17:25:25 [11613] \ud83d\udcb8 generated 35 npos targets\n2023-11-27 17:25:25 [11613] \ud83d\udcb8 generated 74 npos voters, 35 from validators and 39 nominators\n")),(0,r.kt)("p",null,"It's syncing around 450 blocks per second\u2014quite fast! If we leave it for 5 or 10 minutes, it should be done syncing, and this is what we are going to see:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2023-11-27 17:31:30 [84993] \ud83d\udcb8 new validator set of size 185 has been processed for era 21\n2023-11-27 17:31:33 \u2699\ufe0f  Preparing 104.2 bps, target=#85271 (8 peers), best: #85232 (0x234e\u2026a535), finalized #84992 (0x62c0\u2026772a), \u2b07 54.7kiB/s \u2b06 0.9kiB/s\n2023-11-27 17:31:38 \ud83d\udca4 Idle (8 peers), best: #85271 (0xa69a\u20267366), finalized #85269 (0xe83c\u202664ba), \u2b07 46.8kiB/s \u2b06 1.6kiB/s\n2023-11-27 17:31:40 \u2728 Imported #85272 (0x0410\u2026df45)\n2023-11-27 17:31:43 \ud83d\udca4 Idle (8 peers), best: #85272 (0x0410\u2026df45), finalized #85270 (0x7604\u2026006b), \u2b07 43.8kiB/s \u2b06 159.2kiB/s\n2023-11-27 17:31:48 \ud83d\udca4 Idle (8 peers), best: #85272 (0x0410\u2026df45), finalized #85270 (0x7604\u2026006b), \u2b07 87.2kiB/s \u2b06 209.8kiB/s\n")),(0,r.kt)("p",null,"Once we see ",(0,r.kt)("inlineCode",{parentName:"p"},"\ud83d\udca4 Idle"),", we are done syncing, and our node has now fully caught up."),(0,r.kt)("h2",{id:"whats-next"},"What's Next"),(0,r.kt)("p",null,"This is where our story ends. We have a working node connected to the Goldberg chain. It doesn't do much right now, certainly doesn't produce any blocks, but this is something that we will fix. Before that, let's discuss in the next chapter how to do a simple but effective deployment."))}b.isMDXComponent=!0}}]);