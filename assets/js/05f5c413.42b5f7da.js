"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[2972],{3905:(a,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>h});var n=t(7294);function r(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function i(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function l(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function o(a,e){if(null==a)return{};var t,n,r=function(a,e){if(null==a)return{};var t,n,r={},i=Object.keys(a);for(n=0;n<i.length;n++)t=i[n],e.indexOf(t)>=0||(r[t]=a[t]);return r}(a,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);for(n=0;n<i.length;n++)t=i[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(r[t]=a[t])}return r}var d=n.createContext({}),p=function(a){var e=n.useContext(d),t=e;return a&&(t="function"==typeof a?a(e):l(l({},e),a)),t},s=function(a){var e=p(a.components);return n.createElement(d.Provider,{value:e},a.children)},u="mdxType",m={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(a,e){var t=a.components,r=a.mdxType,i=a.originalType,d=a.parentName,s=o(a,["components","mdxType","originalType","parentName"]),u=p(t),c=r,h=u["".concat(d,".").concat(c)]||u[c]||m[c]||i;return t?n.createElement(h,l(l({ref:e},s),{},{components:t})):n.createElement(h,l({ref:e},s))}));function h(a,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof a||r){var i=t.length,l=new Array(i);l[0]=c;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=a,o[u]="string"==typeof a?a:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4746:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const i={id:"madara",title:"How to Use Madara with Avail",sidebar_label:"Avail-Powered Madara Validium",description:"Discover how to utilize Avail as a data availability layer to build a Substrate-based Validium with Madara.",keywords:["documentation","avail","develop","build","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},l=void 0,o={unversionedId:"build/madara/madara",id:"build/madara/madara",title:"How to Use Madara with Avail",description:"Discover how to utilize Avail as a data availability layer to build a Substrate-based Validium with Madara.",source:"@site/docs/build/madara/madara.md",sourceDirName:"build/madara",slug:"/build/madara/",permalink:"/build/madara/",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/build/madara/madara.md",tags:[],version:"current",lastUpdatedBy:"Danny Salman",lastUpdatedAt:1703141631,formattedLastUpdatedAt:"Dec 21, 2023",frontMatter:{id:"madara",title:"How to Use Madara with Avail",sidebar_label:"Avail-Powered Madara Validium",description:"Discover how to utilize Avail as a data availability layer to build a Substrate-based Validium with Madara.",keywords:["documentation","avail","develop","build","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"avail",previous:{title:"Overview",permalink:"/build/madara/overview"},next:{title:"Reference",permalink:"/api/use-case-validiums"}},d={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Hardware Requirements",id:"hardware-requirements",level:3},{value:"Launch an Avail-Powered Madara Validium",id:"launch-an-avail-powered-madara-validium",level:2},{value:"Running a Single-Node Development Chain",id:"running-a-single-node-development-chain",level:3},{value:"Setting Up Avail as the DA Layer",id:"setting-up-avail-as-the-da-layer",level:3},{value:"Deploying an Account on Your Chain",id:"deploying-an-account-on-your-chain",level:3},{value:"Using Avail in Madara",id:"using-avail-in-madara",level:3}],s={toc:p},u="wrapper";function m(a){let{components:e,...t}=a;return(0,r.kt)(u,(0,n.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Embark on setting up your own Madara-based Validium, leveraging Avail as the data availability layer. This guide is tailored for deploying on Ethereum's Sepolia testnet and integrating with the Avail Goldberg testnet. To gain a comprehensive understanding of Madara Starknet, review the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.madara.zone/"},(0,r.kt)("ins",null,"Madara documentation")),"."),(0,r.kt)("p",null,"In this guide, you will conduct the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#introduction"},"Introduction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#hardware-requirements"},"Hardware Requirements")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#launch-an-avail-powered-madara-validium"},"Launch an Avail-Powered Madara Validium"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#running-a-single-node-development-chain"},"Running a Single-Node Development Chain")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setting-up-avail-as-the-da-layer"},"Setting Up Avail as the DA Layer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#deploying-an-account-on-your-chain"},"Deploying an Account on Your Chain")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#using-avail-in-madara"},"Using Avail in Madara"))))),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Ensure you have installed the following software."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Installation commands are based on Ubuntu 20.04 LTS:")),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",{valign:"top"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Software"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.rust-lang.org/"},(0,r.kt)("strong",{parentName:"a"},"Rust"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rustc 1.69.0-nightly")," or later")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/nvm-sh/nvm"},(0,r.kt)("strong",{parentName:"a"},"nvm/Node.js"))),(0,r.kt)("td",{parentName:"tr",align:null},"Latest version")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.cairo-lang.org/docs/quickstart.html"},(0,r.kt)("strong",{parentName:"a"},"Cairo"))),(0,r.kt)("td",{parentName:"tr",align:null},"1.0"))))),(0,r.kt)("td",{valign:"top"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Install Rust\ncurl --proto \'=https\' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nrustup toolchain install nightly\n\n# Install nvm and Node.js\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\nexport NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"\n[ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh" # This loads nvm\nnvm install --lts\n\n# Install Cairo\ncurl -L https://github.com/franalgaba/cairo-installer/raw/main/bin/cairo-installer | bash\n'))))),(0,r.kt)("h3",{id:"hardware-requirements"},"Hardware Requirements"),(0,r.kt)("p",null,"The Madara stack, being a StarkNet sequencer, has specific hardware requirements for efficient operation. These requirements are particularly important when integrating Avail as the DA Layer."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Component"),(0,r.kt)("th",{parentName:"tr",align:null},"Minimum Requirements"),(0,r.kt)("th",{parentName:"tr",align:null},"Recommended Setup"),(0,r.kt)("th",{parentName:"tr",align:null},"Suggested AWS Instance"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sequencer Node"),(0,r.kt)("td",{parentName:"tr",align:null},"4-core CPU, 16GB RAM, 100 GB SSD"),(0,r.kt)("td",{parentName:"tr",align:null},"8-core CPU, 32GB RAM, 200 GB SSD"),(0,r.kt)("td",{parentName:"tr",align:null},"m5a.xlarge")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Avail Node"),(0,r.kt)("td",{parentName:"tr",align:null},"4-core CPU, 8GB RAM, 50 GB SSD"),(0,r.kt)("td",{parentName:"tr",align:null},"8-core CPU, 16GB RAM, 100 GB SSD"),(0,r.kt)("td",{parentName:"tr",align:null},"m5a.large")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The storage requirements can vary based on the volume of transactions and the length of the chain history you intend to maintain. For high-traffic networks, consider scaling your storage capacity accordingly.")),(0,r.kt)("h2",{id:"launch-an-avail-powered-madara-validium"},"Launch an Avail-Powered Madara Validium"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clone the Madara repository:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:keep-starknet-strange/madara.git\ncd madara\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Build the chain in release mode:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build --release\n")))),(0,r.kt)("h3",{id:"running-a-single-node-development-chain"},"Running a Single-Node Development Chain"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start the development chain:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./target/release/madara --dev\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Purge the chain's state:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./target/release/madara purge-chain --dev\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start with detailed logging:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"RUST_BACKTRACE=1 ./target/release/madara -ldebug --dev\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a plain chain spec:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./target/release/madara build-spec > ./infra/chain-sepcs/chain-spec-plain.json\n")))),(0,r.kt)("h3",{id:"setting-up-avail-as-the-da-layer"},"Setting Up Avail as the DA Layer"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Configure Avail for Madara:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Configuration for local Avail node\ncat > da-config.json <<EOF\n{\n  "ws_provider": "ws://127.0.0.1:9945",\n  "app_id": 0,\n  "validate_codegen": false,\n  "seed": "//Alice"\n}\nEOF\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start Avail Node (in another terminal):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./data-avail --dev --rpc-port 9945 --port 30334\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Setup Madara for Avail:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./madara setup --chain=dev --from-remote --base-path=../.madara\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Launch Madara with Avail:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./madara --chain=dev --base-path=../.madara --da-layer=avail --force-authoring --alice\n")))),(0,r.kt)("h3",{id:"deploying-an-account-on-your-chain"},"Deploying an Account on Your Chain"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"After setting up your chain, you can deploy your own account and start making transactions.")),(0,r.kt)("h3",{id:"using-avail-in-madara"},"Using Avail in Madara"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Specify ",(0,r.kt)("inlineCode",{parentName:"li"},"--da-layer avail")," when launching a Madara node to use Avail for publishing the state_diff.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Remember to adjust the ",(0,r.kt)("inlineCode",{parentName:"p"},"da-config.json")," file based on your setup, whether it's a local node or using the Avail network.")))}m.isMDXComponent=!0}}]);