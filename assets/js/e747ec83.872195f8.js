"use strict";(self.webpackChunkavail_docs_wiki=self.webpackChunkavail_docs_wiki||[]).push([[2291],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var i=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var r=i.createContext({}),c=function(e){var t=i.useContext(r),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=c(e.components);return i.createElement(r.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),h=c(a),u=n,m=h["".concat(r,".").concat(u)]||h[u]||p[u]||o;return a?i.createElement(m,s(s({ref:t},d),{},{components:a})):i.createElement(m,s({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=u;var l={};for(var r in t)hasOwnProperty.call(t,r)&&(l[r]=t[r]);l.originalType=e,l[h]="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=a[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5309:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=a(7462),n=(a(7294),a(3905));const o={id:"glossary",title:"Glossary",sidebar_label:"Glossary",description:"A glossary of essential terms, definitions, and concepts related to Avail.",keywords:["docs","avail","Glossary","Monolithic","data availability"],image:"https://availproject.github.io/img/avail/AvailDocs.png"},s=void 0,l={unversionedId:"glossary",id:"glossary",title:"Glossary",description:"A glossary of essential terms, definitions, and concepts related to Avail.",source:"@site/docs/glossary.md",sourceDirName:".",slug:"/glossary",permalink:"/glossary",draft:!1,editUrl:"https://github.com/availproject/availproject.github.io/tree/main/docs/glossary.md",tags:[],version:"current",lastUpdatedBy:"Danny Salman",lastUpdatedAt:1705959726,formattedLastUpdatedAt:"Jan 22, 2024",frontMatter:{id:"glossary",title:"Glossary",sidebar_label:"Glossary",description:"A glossary of essential terms, definitions, and concepts related to Avail.",keywords:["docs","avail","Glossary","Monolithic","data availability"],image:"https://availproject.github.io/img/avail/AvailDocs.png"},sidebar:"avail",previous:{title:"Sovereign Rollups",permalink:"/category/sovereign-rollups"},next:{title:"FAQs",permalink:"/faqs"}},r={},c=[{value:"Appchain",id:"appchain",level:2},{value:"AVL",id:"avl",level:2},{value:"Avail JS Apps",id:"avail-js-apps",level:2},{value:"BABE",id:"babe",level:2},{value:"Bonding",id:"bonding",level:2},{value:"Chilling",id:"chilling",level:2},{value:"Commission",id:"commission",level:2},{value:"Consensus",id:"consensus",level:2},{value:"Controller Account",id:"controller-account",level:2},{value:"Data Attestation",id:"data-attestation",level:2},{value:"Data Availability Committee (DAC)",id:"data-availability-committee-dac",level:2},{value:"Data Availability Sampling (DAS)",id:"data-availability-sampling-das",level:2},{value:"DHT (Distributed Hash Table)",id:"dht-distributed-hash-table",level:2},{value:"Decoupling",id:"decoupling",level:2},{value:"Equivocation",id:"equivocation",level:2},{value:"Era",id:"era",level:2},{value:"Epoch",id:"epoch",level:2},{value:"Execution",id:"execution",level:2},{value:"Finality Gadget",id:"finality-gadget",level:2},{value:"Fraud Proofs",id:"fraud-proofs",level:2},{value:"GRANDPA",id:"grandpa",level:2},{value:"KZG Commitments",id:"kzg-commitments",level:2},{value:"Kademlia DHT (Kad-DHT)",id:"kademlia-dht-kad-dht",level:2},{value:"libp2p",id:"libp2p",level:2},{value:"Light Client",id:"light-client",level:2},{value:"Mainnet",id:"mainnet",level:2},{value:"Modular Blockchain",id:"modular-blockchain",level:2},{value:"Monolithic Blockchain",id:"monolithic-blockchain",level:2},{value:"Nominated Proof of Stake",id:"nominated-proof-of-stake",level:2},{value:"Oversubscribed",id:"oversubscribed",level:2},{value:"Scalability",id:"scalability",level:2},{value:"Session",id:"session",level:2},{value:"Settlement",id:"settlement",level:2},{value:"Slashing",id:"slashing",level:2},{value:"Sovereign Rollup",id:"sovereign-rollup",level:2},{value:"Stash Account",id:"stash-account",level:2},{value:"Testnet",id:"testnet",level:2},{value:"Validium",id:"validium",level:2},{value:"Validator",id:"validator",level:2},{value:"Volition",id:"volition",level:2}],d={toc:c},h="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(h,(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{title:"Glossary as a Reference for Concepts",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"While the Avail documentation is under development, the Glossary is being used to elaborate on key concepts.\nIf you have any questions or concerns, please don't hesitate to contact the Avail team.")),(0,n.kt)("h2",{id:"appchain"},"Appchain"),(0,n.kt)("p",null,"Appchains allow developers to optimize their applications by tailoring a chain to the specific needs of their use case, without constraints from a shared blockchain. They provide enhanced performance and scalability by functioning as independent chains, serving specific applications. Appchains also simplify the development process by eliminating the need for developers to manage and maintain a validator set. Avail enables the creation of modular appchain architectures that can be based on different layer 2 or 3 scaling solutions."),(0,n.kt)("h2",{id:"avl"},"AVL"),(0,n.kt)("p",null,'AVL is the native token of the Avail network. Currently, there is no publicly available "AVL" token with monetary value; it is solely used for testnet purposes.'),(0,n.kt)("h2",{id:"avail-js-apps"},"Avail JS Apps"),(0,n.kt)("p",null,"The Avail JS Apps UI is a forked version of ",(0,n.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps/"},(0,n.kt)("ins",null,"Polkadot JS Apps UI"))," that is used for visualizing and interacting with the Avail network."),(0,n.kt)("h2",{id:"babe"},"BABE"),(0,n.kt)("p",null,"BABE (Blind Assignment for Blockchain Extension), part of the Substrate framework, is the block production mechanism that Avail uses. Please refer to the ",(0,n.kt)("a",{parentName:"p",href:"https://wiki.polkadot.network/docs/learn-consensus#block-production-babe"},(0,n.kt)("ins",null,"Polkadot Wiki"))," for more details."),(0,n.kt)("h2",{id:"bonding"},"Bonding"),(0,n.kt)("p",null,"Bonding is a process of locking or depositing tokens in order to participate in the operations of the Avail network. This includes participating in the consensus process and securing the network."),(0,n.kt)("h2",{id:"chilling"},"Chilling"),(0,n.kt)("p",null,"Chilling refers to the deliberate action of withdrawing from nominating or validating roles. Both validators and nominators can initiate chilling, which becomes effective in the subsequent era. Additionally, chilling can denote the exclusion of a validator from the active set by their peers, rendering them ineligible as candidates for the upcoming consensus cycle."),(0,n.kt)("h2",{id:"commission"},"Commission"),(0,n.kt)("p",null,"Validators earn rewards for block production on the network. They set a commission rate, which is first deducted from their total rewards. The remaining rewards are then distributed to the nominators backing that validator based on this commission rate."),(0,n.kt)("h2",{id:"consensus"},"Consensus"),(0,n.kt)("p",null,"Consensus refers to the mechanism by which nodes come to an agreement about what data on the blockchain can be verified as true and accurate. The consensus protocol determines how transactions are ordered and how new blocks are added to the chain, which is ",(0,n.kt)("a",{parentName:"p",href:"#nominated-proof-of-stake"},(0,n.kt)("ins",null,"NPoS"))," for Avail."),(0,n.kt)("h2",{id:"controller-account"},"Controller Account"),(0,n.kt)("p",null,"The controller account is tasked with managing staking activities and executing transactions on the network. This includes responsibilities like nominating validators, bonding and unbonding funds, and paying transaction fees. Given its active role, the controller key is used more frequently and is essential for the day-to-day operations of the account."),(0,n.kt)("h2",{id:"data-attestation"},"Data Attestation"),(0,n.kt)("p",null,"Data attestation involves confirming the authenticity and integrity of data. In Avail, this process ensures that data on the chain is both accessible and accurate. An Avail block header incorporates two attestations: KZG polynomial commitments for the provided data and the Merkle tree root with data blobs as leaves. A supermajority of Avail's validators achieve finality on the header by signing a chain that includes the header, utilizing the ",(0,n.kt)("a",{parentName:"p",href:"#grandpa"},(0,n.kt)("ins",null,"GRANDPA"))," protocol."),(0,n.kt)("h2",{id:"data-availability-committee-dac"},"Data Availability Committee (DAC)"),(0,n.kt)("p",null,"A Data Availability Committee (DAC) consists of a group of nodes responsible for preserving copies of off-chain data and ensuring its accessibility upon demand. DACs can be integral to scaling solutions that enhance a blockchain's throughput by managing transactions on a distinct layer, commonly referred to as off-chain scaling. Unlike DACs, which often cater to specific Layer 2 (L2) solutions, Avail stands out as a universally applicable data availability layer. It operates as an autonomous chain, ensuring a more impartial and versatile approach to data availability."),(0,n.kt)("h2",{id:"data-availability-sampling-das"},"Data Availability Sampling (DAS)"),(0,n.kt)("p",null,"Data availability sampling allows light clients to confirm the availability of data without downloading complete blocks. Through this method, light clients engage in several rounds of random sampling for small chunks of block data. With each successful round, confidence that the data is available grows. When the light node achieves a set confidence threshold, they recognize the block data as accessible."),(0,n.kt)("h2",{id:"dht-distributed-hash-table"},"DHT (Distributed Hash Table)"),(0,n.kt)("p",null,"A Distributed Hash Table (DHT) is a decentralized system offering a lookup service akin to a traditional hash table. It holds key-value pairs, enabling peers to swiftly find the value corresponding to a specific key. The DHT is pivotal in the process of sharing data cells, especially for random sampling and proof verification. It facilitates nodes in storing and identifying information about providers. Through the DHT, nodes in the network are interconnected, streamlining cell discovery and access."),(0,n.kt)("h2",{id:"decoupling"},"Decoupling"),(0,n.kt)("p",null,"Decoupling in the context of blockchain refers to the strategic separation of distinct functionalities into independent modules or layers. By doing so, a modular blockchain can specialize and excel in specific tasks, rather than being burdened by the need to handle every function. This modular approach enhances efficiency, flexibility, and scalability, allowing each component to evolve and optimize independently."),(0,n.kt)("h2",{id:"equivocation"},"Equivocation"),(0,n.kt)("p",null,"Equivocation is when a validator signs two or more conflicting blocks or messages. This can be done intentionally or unintentionally."),(0,n.kt)("h2",{id:"era"},"Era"),(0,n.kt)("p",null,"An Era in Avail represents a predefined number of ",(0,n.kt)("a",{parentName:"p",href:"#session"},(0,n.kt)("ins",null,"sessions"))," during which the validator set is determined and rewards are distributed. At the onset of each era, validators are chosen to be part of the active set based on their staked amount. The selection also considers other factors, such as a validator's performance in the previous era\u2014specifically, if they were inactive due to being chilled or slashed. Should a new validator stake a higher amount than current validators, or if an active validator underperforms, they can be replaced in the active set for the upcoming era."),(0,n.kt)("h2",{id:"epoch"},"Epoch"),(0,n.kt)("p",null,"An Epoch is a designated time frame during which a specific group of validation nodes undertakes the task of verifying transactions and appending them to the blockchain. The duration of an epoch can vary across different blockchain networks."),(0,n.kt)("h2",{id:"execution"},"Execution"),(0,n.kt)("p",null,"In traditional blockchains, execution refers to how nodes process transactions to transition the blockchain between states. However, Avail operates differently. As a modular base chain, Avail does not possess a general-purpose execution layer. Instead, execution occurs in other layers, such as rollups, and the resulting data is posted to Avail in its raw form, without undergoing execution on Avail itself."),(0,n.kt)("p",null,"In Avail's context, \"Consensus\" carries a more specific meaning than in typical blockchains with integrated execution layers. For Avail, consensus signifies the network's agreement that data has been appropriately published. Explicitly, validator nodes in Avail do not execute transactions as a prerequisite for attesting to the validity of blocks. With a few exceptions, such as balance transfers, validators primarily attest to the correct packaging of published data within blocks. This streamlined approach is a primary reason Avail can accommodate larger block sizes. Since validators undertake less work per block, increasing block size has a reduced impact compared to other blockchains."),(0,n.kt)("h2",{id:"finality-gadget"},"Finality Gadget"),(0,n.kt)("p",null,"A finality gadget is a mechanism that ensures blockchain state finality by requiring validators' commitment through signed messages. Once sufficiently validated, the state is finalized and secure from malicious modifications."),(0,n.kt)("h2",{id:"fraud-proofs"},"Fraud Proofs"),(0,n.kt)("p",null,"Fraud proofs are cryptographic proofs employed to validate the legitimacy of a transaction or state transition on Avail. Any node can generate and share a fraud proof across the P2P network. App clients can then assess these proofs and respond accordingly."),(0,n.kt)("h2",{id:"grandpa"},"GRANDPA"),(0,n.kt)("p",null,"GRANDPA (GHOST-based Recursive Ancestor Deriving Prefix Agreement), part of the Substrate framework, is the finality gadget Avail uses. Please refer to ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/w3f/consensus/blob/master/pdf/grandpa.pdf"},"the GRANDPA paper")," for a full description of the protocol."),(0,n.kt)("h2",{id:"kzg-commitments"},"KZG Commitments"),(0,n.kt)("p",null,"KZG commitments, pioneered by Aniket Kate, Gregory M. Zaverucha, and Ian Goldberg in 2010, offer a concise method for committing to polynomials. These commitments have recently gained prominence, especially in PLONK-like zero-knowledge frameworks."),(0,n.kt)("p",null,"In Avail's design, KZG commitments are employed for several key reasons:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"They enable succinct commitments, ideal for inclusion in block headers."),(0,n.kt)("li",{parentName:"ul"},"They support brief openings, facilitating light client availability verification."),(0,n.kt)("li",{parentName:"ul"},"Their strong cryptographic binding ensures the prevention of fraud proofs by rendering the creation of false commitments\ncomputationally challenging.")),(0,n.kt)("h2",{id:"kademlia-dht-kad-dht"},"Kademlia DHT (Kad-DHT)"),(0,n.kt)("p",null,"Kad-DHT is a specific Distributed Hash Table (DHT) variant that organizes nodes and data based on a chord ring\u2014a logical arrangement of nodes ordered by their IDs. Avail employs Kad-DHT to establish a decentralized network for data storage and retrieval. In this structure, each node is tasked with holding a portion of the data. Nodes can directly communicate to access data. Avail utilizes Kad-DHT to store data cells and pinpoint which peer possesses a particular data segment, with matrix data cells uniquely mapped to Peer IDs."),(0,n.kt)("h2",{id:"libp2p"},"libp2p"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://libp2p.io/"},(0,n.kt)("ins",null,"libp2p"))," is an open-source modular network stack designed for constructing peer-to-peer (P2P) applications. It offers a flexible framework for data transfer across diverse transport protocols. Avail integrates libp2p to establish a decentralized network dedicated to data availability, ensuring that transaction data is efficiently stored and disseminated to validators and full nodes."),(0,n.kt)("h2",{id:"light-client"},"Light Client"),(0,n.kt)("p",null,"Light clients enable users to engage with a blockchain network without synchronizing the entire blockchain, preserving both decentralization and security. Typically, they retrieve only the blockchain headers, omitting the full block contents. Avail's light clients enhance this by employing Data Availability Sampling. This method ensures block content availability by downloading and verifying random segments of a block."),(0,n.kt)("h2",{id:"mainnet"},"Mainnet"),(0,n.kt)("p",null,'A mainnet is a blockchain network that is fully operational and open to the public. It is the "production" version of a blockchain network, and it is where real-world transactions and applications are deployed. View the ',(0,n.kt)("a",{parentName:"p",href:"https://blog.availproject.org/road-to-mainnet-september-2023/"},"Roadmap to Mainnet blog post")," for more information on Avail's mainnet."),(0,n.kt)("h2",{id:"modular-blockchain"},"Modular Blockchain"),(0,n.kt)("p",null,"A modular blockchain specializes in managing specific tasks while delegating other responsibilities to distinct layers or components."),(0,n.kt)("h2",{id:"monolithic-blockchain"},"Monolithic Blockchain"),(0,n.kt)("p",null,"A monolithic blockchain encompasses all core functionalities (Execution, Settlement, Ordering, Data Availability) within a singular blockchain structure."),(0,n.kt)("h2",{id:"nominated-proof-of-stake"},"Nominated Proof of Stake"),(0,n.kt)("p",null,"Nominated Proof of Stake (NPoS) is a consensus algorithm where users nominate validators to process blocks for them. These validators verify and append transactions to the blockchain. For their services, validators receive rewards in the form of the native tokens. They then commission a portion of these rewards to nominators based on a set commission rate. Avail uses NPoS as implemented within Substrate."),(0,n.kt)("h2",{id:"oversubscribed"},"Oversubscribed"),(0,n.kt)("p",null,"Oversubscribed refers to a situation where the number of nominators wishing to participate in the consensus process exceeds the available slots."),(0,n.kt)("h2",{id:"scalability"},"Scalability"),(0,n.kt)("p",null,"Scalability within Avail pertains to the capacity to augment the volume of data disseminated by the chain, ensuring that the experience of its participants and users remains unaffected. Avail achieves this by adopting a modular approach, taking DA off-chain, which allows the main network to primarily focus on execution. This modular design facilitates the individual optimization of key constructs, enabling each component to be scaled according to its unique requirements."),(0,n.kt)("h2",{id:"session"},"Session"),(0,n.kt)("p",null,"A session refers to a specific duration during which a fixed set of validators operate. Validators can enter or exit the set only at the transition between sessions."),(0,n.kt)("h2",{id:"settlement"},"Settlement"),(0,n.kt)("p",null,"In the context of Avail and modular blockchains, settlement refers to the process by which modular layers agree on the correct execution outcome of transaction data. This includes any necessary dispute resolution processes. Since Avail operates as a modular base chain, it merely receives and stores raw transaction data without executing it. This data can encompass a wide range, from valid transactions to potential spam."),(0,n.kt)("p",null,'The actual execution of these transactions and the subsequent validation of their outcomes occur in other layers or systems. Once these layers reach an agreement on the outcome, the results are "settled." For instance, in the case of a validium, transaction data is published to Avail, sequencers then execute these transactions, and finally, proofs of these executions are posted to Ethereum for settlement. Different modular constructions might employ varying mechanisms or platforms for settlement, but the core principle remains the same: determining and agreeing upon the correct outcome of transactions.'),(0,n.kt)("h2",{id:"slashing"},"Slashing"),(0,n.kt)("p",null,"Slashing is a penalty that is imposed on validators who misbehave. For example, a validator may be slashed if they equivocate, meaning that they sign two or more conflicting blocks. Slashing can be a severe penalty, as it can result in the loss of a portion of the validator's stake."),(0,n.kt)("h2",{id:"sovereign-rollup"},"Sovereign Rollup"),(0,n.kt)("p",null,"A sovereign rollup is a type of blockchain that publishes its transactions to another blockchain, typically for ordering and data availability, but handles its own settlement. This means that sovereign rollups have their own canonical chain and validity rules, and they do not need to rely on a settlement layer to determine which transactions are valid."),(0,n.kt)("h2",{id:"stash-account"},"Stash Account"),(0,n.kt)("p",null,"The stash account holds the tokens you wish to stake/bond. This account is like a cold storage account and is used for bonding and unbonding tokens, as well as for designating the controller account."),(0,n.kt)("h2",{id:"testnet"},"Testnet"),(0,n.kt)("p",null,"A testnet is a simulated blockchain network that is used to test and debug blockchain applications before they are deployed on the mainnet. Testnets are typically open to the public, and anyone can participate in them."),(0,n.kt)("h2",{id:"validium"},"Validium"),(0,n.kt)("p",null,"Validiums are designed to store transaction data off the primary layer (L1), such as Ethereum. They can seamlessly leverage the benefits of Avail's scalable and specialized module. Rather than directing transaction data to a ",(0,n.kt)("a",{parentName:"p",href:"#data-availability-committee-dac"},(0,n.kt)("ins",null,"DAC"))," or other alternatives, Validiums can commit this data to Avail."),(0,n.kt)("p",null,"A layer 2 solution, like a rollup, can evolve into a Validium by choosing off-chain data storage over the main chain. This distinction is subtle, as a Validium isn't strictly a \"layer 2\" in the traditional sense; it doesn't post data to L1, introducing different trust considerations. However, in many contexts, it's still categorized as a layer 2 solution. Fundamentally, a Validium can be described as a rollup combined with off-chain data availability, akin to Avail's approach."),(0,n.kt)("h2",{id:"validator"},"Validator"),(0,n.kt)("p",null,"An Avail validator is a full node that is responsible for verifying transactions and adding them to the blockchain."),(0,n.kt)("h2",{id:"volition"},"Volition"),(0,n.kt)("p",null,"Volitions represent an advanced form of zero-knowledge rollups, offering developers the flexibility to decide the storage location for transaction data, be it on-chain or off-chain. This adaptability ensures that developers can optimize for both cost and DA based on the specific requirements of their application. In the context of Avail, volitions can leverage the platform's robust DA layer, ensuring that off-chain data remains easily accessible and verifiable, thereby enhancing the security and efficiency of decentralized applications."))}p.isMDXComponent=!0}}]);